diff --git a/bootstrap.php b/bootstrap.php
index 760a7cc..91200e8 100644
--- a/bootstrap.php
+++ b/bootstrap.php
@@ -7,6 +7,7 @@ $configuration = array(
 );
 
 require_once __DIR__.'/lib/Service/Container.php';
+require_once __DIR__.'/lib/Model/AbstractShip.php';
 require_once __DIR__.'/lib/Model/Ship.php';
 require_once __DIR__.'/lib/Model/RebelShip.php';
 require_once __DIR__.'/lib/Service/BattleManager.php';
diff --git a/lib/Model/AbstractShip.php b/lib/Model/AbstractShip.php
new file mode 100644
index 0000000..f4f8a46
--- /dev/null
+++ b/lib/Model/AbstractShip.php
@@ -0,0 +1,139 @@
+<?php
+
+class AbstractShip
+{
+    private $id;
+
+    private $name;
+
+    private $weaponPower = 0;
+
+    private $jediFactor = 0;
+
+    private $strength = 0;
+
+    private $underRepair;
+
+    public function __construct($name)
+    {
+        $this->name = $name;
+        // randomly put this ship under repair
+        $this->underRepair = mt_rand(1, 100) < 30;
+    }
+
+    public function isFunctional()
+    {
+        return !$this->underRepair;
+    }
+
+    public function sayHello()
+    {
+        echo 'Hello!';
+    }
+
+    public function getName()
+    {
+        return $this->name;
+    }
+
+    public function setStrength($number)
+    {
+        if (!is_numeric($number)) {
+            throw new \Exception('Strength must be a number, duh!');
+        }
+
+        $this->strength = $number;
+    }
+
+    public function getStrength()
+    {
+        return $this->strength;
+    }
+
+    public function getNameAndSpecs($useShortFormat = false)
+    {
+        if ($useShortFormat) {
+            return sprintf(
+                '%s: %s/%s/%s',
+                $this->name,
+                $this->weaponPower,
+                $this->jediFactor,
+                $this->strength
+            );
+        } else {
+            return sprintf(
+                '%s: w:%s, j:%s, s:%s',
+                $this->name,
+                $this->weaponPower,
+                $this->jediFactor,
+                $this->strength
+            );
+        }
+    }
+
+    public function doesGivenShipHaveMoreStrength($givenShip)
+    {
+        return $givenShip->strength > $this->strength;
+    }
+
+    /**
+     * @return int
+     */
+    public function getWeaponPower()
+    {
+        return $this->weaponPower;
+    }
+
+    /**
+     * @return int
+     */
+    public function getJediFactor()
+    {
+        return $this->jediFactor;
+    }
+
+    /**
+     * @param string $name
+     */
+    public function setName($name)
+    {
+        $this->name = $name;
+    }
+
+    /**
+     * @param int $weaponPower
+     */
+    public function setWeaponPower($weaponPower)
+    {
+        $this->weaponPower = $weaponPower;
+    }
+
+    /**
+     * @param int $jediFactor
+     */
+    public function setJediFactor($jediFactor)
+    {
+        $this->jediFactor = $jediFactor;
+    }
+
+    /**
+     * @return int
+     */
+    public function getId()
+    {
+        return $this->id;
+    }
+
+    /**
+     * @param int $id
+     */
+    public function setId($id)
+    {
+        $this->id = $id;
+    }
+
+    public function getType()
+    {
+        return 'Empire';
+    }
+}
diff --git a/lib/Model/RebelShip.php b/lib/Model/RebelShip.php
index c1b9301..8d00bb0 100644
--- a/lib/Model/RebelShip.php
+++ b/lib/Model/RebelShip.php
@@ -1,6 +1,6 @@
 <?php
 
-class RebelShip extends Ship
+class RebelShip extends AbstractShip
 {
     public function getFavoriteJedi()
     {
diff --git a/lib/Model/Ship.php b/lib/Model/Ship.php
index fb02eb2..8e0d822 100644
--- a/lib/Model/Ship.php
+++ b/lib/Model/Ship.php
@@ -1,139 +1,5 @@
 <?php
 
-class Ship
+class Ship extends AbstractShip
 {
-    private $id;
-
-    private $name;
-
-    private $weaponPower = 0;
-
-    private $jediFactor = 0;
-
-    private $strength = 0;
-
-    private $underRepair;
-
-    public function __construct($name)
-    {
-        $this->name = $name;
-        // randomly put this ship under repair
-        $this->underRepair = mt_rand(1, 100) < 30;
-    }
-
-    public function isFunctional()
-    {
-        return !$this->underRepair;
-    }
-
-    public function sayHello()
-    {
-        echo 'Hello!';
-    }
-
-    public function getName()
-    {
-        return $this->name;
-    }
-    
-    public function setStrength($number)
-    {
-        if (!is_numeric($number)) {
-            throw new \Exception('Strength must be a number, duh!');
-        }
-
-        $this->strength = $number;
-    }
-
-    public function getStrength()
-    {
-        return $this->strength;
-    }
-
-    public function getNameAndSpecs($useShortFormat = false)
-    {
-        if ($useShortFormat) {
-            return sprintf(
-                '%s: %s/%s/%s',
-                $this->name,
-                $this->weaponPower,
-                $this->jediFactor,
-                $this->strength
-            );
-        } else {
-            return sprintf(
-                '%s: w:%s, j:%s, s:%s',
-                $this->name,
-                $this->weaponPower,
-                $this->jediFactor,
-                $this->strength
-            );
-        }
-    }
-
-    public function doesGivenShipHaveMoreStrength($givenShip)
-    {
-        return $givenShip->strength > $this->strength;
-    }
-
-    /**
-     * @return int
-     */
-    public function getWeaponPower()
-    {
-        return $this->weaponPower;
-    }
-
-    /**
-     * @return int
-     */
-    public function getJediFactor()
-    {
-        return $this->jediFactor;
-    }
-
-    /**
-     * @param string $name
-     */
-    public function setName($name)
-    {
-        $this->name = $name;
-    }
-
-    /**
-     * @param int $weaponPower
-     */
-    public function setWeaponPower($weaponPower)
-    {
-        $this->weaponPower = $weaponPower;
-    }
-
-    /**
-     * @param int $jediFactor
-     */
-    public function setJediFactor($jediFactor)
-    {
-        $this->jediFactor = $jediFactor;
-    }
-
-    /**
-     * @return int
-     */
-    public function getId()
-    {
-        return $this->id;
-    }
-
-    /**
-     * @param int $id
-     */
-    public function setId($id)
-    {
-        $this->id = $id;
-    }
-
-    public function getType()
-    {
-        return 'Empire';
-    }
 }
